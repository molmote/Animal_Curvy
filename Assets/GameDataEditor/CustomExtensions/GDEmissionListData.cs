// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
// 
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEmissionListData : IGDEData
    {
        private static string indexKey = "index";
		private int _index;
        public int index
        {
            get { return _index; }
            set {
                if (_index != value)
                {
                    _index = value;
                    GDEDataManager.SetInt(_key+"_"+indexKey, _index);
                }
            }
        }

        private static string defaultGoalKey = "defaultGoal";
		private int _defaultGoal;
        public int defaultGoal
        {
            get { return _defaultGoal; }
            set {
                if (_defaultGoal != value)
                {
                    _defaultGoal = value;
                    GDEDataManager.SetInt(_key+"_"+defaultGoalKey, _defaultGoal);
                }
            }
        }

        private static string increaseGoalKey = "increaseGoal";
		private int _increaseGoal;
        public int increaseGoal
        {
            get { return _increaseGoal; }
            set {
                if (_increaseGoal != value)
                {
                    _increaseGoal = value;
                    GDEDataManager.SetInt(_key+"_"+increaseGoalKey, _increaseGoal);
                }
            }
        }

        private static string additionalGoalKey = "additionalGoal";
		private int _additionalGoal;
        public int additionalGoal
        {
            get { return _additionalGoal; }
            set {
                if (_additionalGoal != value)
                {
                    _additionalGoal = value;
                    GDEDataManager.SetInt(_key+"_"+additionalGoalKey, _additionalGoal);
                }
            }
        }

        private static string maxGoalKey = "maxGoal";
		private int _maxGoal;
        public int maxGoal
        {
            get { return _maxGoal; }
            set {
                if (_maxGoal != value)
                {
                    _maxGoal = value;
                    GDEDataManager.SetInt(_key+"_"+maxGoalKey, _maxGoal);
                }
            }
        }

        private static string defaultRewardKey = "defaultReward";
		private int _defaultReward;
        public int defaultReward
        {
            get { return _defaultReward; }
            set {
                if (_defaultReward != value)
                {
                    _defaultReward = value;
                    GDEDataManager.SetInt(_key+"_"+defaultRewardKey, _defaultReward);
                }
            }
        }

        private static string increaseRewardKey = "increaseReward";
		private int _increaseReward;
        public int increaseReward
        {
            get { return _increaseReward; }
            set {
                if (_increaseReward != value)
                {
                    _increaseReward = value;
                    GDEDataManager.SetInt(_key+"_"+increaseRewardKey, _increaseReward);
                }
            }
        }

        private static string maxRewardKey = "maxReward";
		private int _maxReward;
        public int maxReward
        {
            get { return _maxReward; }
            set {
                if (_maxReward != value)
                {
                    _maxReward = value;
                    GDEDataManager.SetInt(_key+"_"+maxRewardKey, _maxReward);
                }
            }
        }

        private static string missionTypeKey = "missionType";
		private string _missionType;
        public string missionType
        {
            get { return _missionType; }
            set {
                if (_missionType != value)
                {
                    _missionType = value;
                    GDEDataManager.SetString(_key+"_"+missionTypeKey, _missionType);
                }
            }
        }

        public GDEmissionListData()
		{
			_key = string.Empty;
		}

		public GDEmissionListData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;
			
			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetInt(indexKey, out _index);
                dict.TryGetInt(defaultGoalKey, out _defaultGoal);
                dict.TryGetInt(increaseGoalKey, out _increaseGoal);
                dict.TryGetInt(additionalGoalKey, out _additionalGoal);
                dict.TryGetInt(maxGoalKey, out _maxGoal);
                dict.TryGetInt(defaultRewardKey, out _defaultReward);
                dict.TryGetInt(increaseRewardKey, out _increaseReward);
                dict.TryGetInt(maxRewardKey, out _maxReward);
                dict.TryGetString(missionTypeKey, out _missionType);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _index = GDEDataManager.GetInt(_key+"_"+indexKey, _index);
            _defaultGoal = GDEDataManager.GetInt(_key+"_"+defaultGoalKey, _defaultGoal);
            _increaseGoal = GDEDataManager.GetInt(_key+"_"+increaseGoalKey, _increaseGoal);
            _additionalGoal = GDEDataManager.GetInt(_key+"_"+additionalGoalKey, _additionalGoal);
            _maxGoal = GDEDataManager.GetInt(_key+"_"+maxGoalKey, _maxGoal);
            _defaultReward = GDEDataManager.GetInt(_key+"_"+defaultRewardKey, _defaultReward);
            _increaseReward = GDEDataManager.GetInt(_key+"_"+increaseRewardKey, _increaseReward);
            _maxReward = GDEDataManager.GetInt(_key+"_"+maxRewardKey, _maxReward);
            _missionType = GDEDataManager.GetString(_key+"_"+missionTypeKey, _missionType);
         }

        public void Reset_index()
        {
            GDEDataManager.ResetToDefault(_key, indexKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(indexKey, out _index);
        }

        public void Reset_defaultGoal()
        {
            GDEDataManager.ResetToDefault(_key, defaultGoalKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(defaultGoalKey, out _defaultGoal);
        }

        public void Reset_increaseGoal()
        {
            GDEDataManager.ResetToDefault(_key, increaseGoalKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(increaseGoalKey, out _increaseGoal);
        }

        public void Reset_additionalGoal()
        {
            GDEDataManager.ResetToDefault(_key, additionalGoalKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(additionalGoalKey, out _additionalGoal);
        }

        public void Reset_maxGoal()
        {
            GDEDataManager.ResetToDefault(_key, maxGoalKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(maxGoalKey, out _maxGoal);
        }

        public void Reset_defaultReward()
        {
            GDEDataManager.ResetToDefault(_key, defaultRewardKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(defaultRewardKey, out _defaultReward);
        }

        public void Reset_increaseReward()
        {
            GDEDataManager.ResetToDefault(_key, increaseRewardKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(increaseRewardKey, out _increaseReward);
        }

        public void Reset_maxReward()
        {
            GDEDataManager.ResetToDefault(_key, maxRewardKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(maxRewardKey, out _maxReward);
        }

        public void Reset_missionType()
        {
            GDEDataManager.ResetToDefault(_key, missionTypeKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(missionTypeKey, out _missionType);
        }

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, indexKey);
            GDEDataManager.ResetToDefault(_key, missionTypeKey);
            GDEDataManager.ResetToDefault(_key, defaultGoalKey);
            GDEDataManager.ResetToDefault(_key, increaseGoalKey);
            GDEDataManager.ResetToDefault(_key, additionalGoalKey);
            GDEDataManager.ResetToDefault(_key, maxGoalKey);
            GDEDataManager.ResetToDefault(_key, defaultRewardKey);
            GDEDataManager.ResetToDefault(_key, increaseRewardKey);
            GDEDataManager.ResetToDefault(_key, maxRewardKey);


            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
